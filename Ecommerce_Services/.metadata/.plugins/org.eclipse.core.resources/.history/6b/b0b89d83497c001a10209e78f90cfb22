package com.ecommerce.orderservice.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ecommerce.orderservice.models.Order;
import com.ecommerce.orderservice.models.OrderDto;
import com.ecommerce.orderservice.repository.OrderRepository;
import com.ecommerce.orderservice.service.OrderDetailService;

/**
 * Order Detail Service Implementation to queries order DB
 * 
 * @author keshavaggarwal
 *
 */
@Service
public class OrderDetailServiceImpl implements OrderDetailService {

	@Autowired
	private OrderRepository orderRepository;
	
	@Override
	public List<OrderDto> getOrders() {
		List<OrderDto> orders = new ArrayList<>();
		orderRepository.findAll().forEach(order -> orders.add(from(order)));
		return orders;
	}

	@Override
	public List<OrderDto> getOrderForUserId(String userId) {
		List<OrderDto> orders = new ArrayList<>();
		 
		orderRepository.findAll().stream().
		 filter(o -> userId.equals(o.getUserId())).
		 collect(Collectors.toList()).
		 forEach(order -> orders.add(from(order)));		
		
		 return orders;
	}
	
    public void addOrder(Order order) {
    	orderRepository.save(order);
    }

    public void updateOrder(String orderId, OrderDto orderDto) {
    	Optional<Order> order = orderRepository.findById(orderId);
    	
    	if(order.isPresent()) {
        	orderRepository.save(from(orderId, orderDto, order.get().getUserId()));
    	}
    }

    public void deleteOrder(String orderId) {
    	orderRepository.deleteById(orderId);
    }
    
    private OrderDto from(Order order) {
    	return new OrderDto(order.getorderid(), order.getOrderAmount(), 
    			order.getOrderDate());
    }

    private Order from(String orderId, OrderDto orderDto, String userId) {
    	return new Order(orderId, orderDto.getOrderAmount(), 
    			orderDto.getOrderDate(), userId);
    }
}
