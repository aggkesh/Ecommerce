package com.ecommerce.aggregatorservice.service.impl;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.ecommerce.aggregatorservice.models.OrderDetail;
import com.ecommerce.aggregatorservice.service.OrderDetailService;

public class OrderDetailServiceImpl implements OrderDetailService {

	@Resource(name = "restTemp")
	private RestTemplate restTemplate;

	@Value("${QUOTES_USER_URL:localhost://8080}")
	private String usersUrl;
	
	@Value("${QUOTES_ORDER_URL:localhost://8081}")
	private String ordersUrl;
	
	@Override
	public OrderDetail getOrderDetail(String userId) {

		Object userDetail = getUserDetail(userId);
		List<Object> orders = getOrdersForUserId(userId);
		
		if(userDetails != null && orders != null)
		if (userDetails != null) {
			orderDetail.setUser(userDetails);
			if (ordersDetails != null) {
				orderDetail.setOrders(ordersDetails);
			}
			return orderDetail;
		}
		
		return null;
	}

	public List<Object> getOrdersForUserId(String userId) {
		String url = ordersUrl + "/orders/" + userId;

		ResponseEntity<Object[]> ordersResponse = restTemplate.getForEntity(url, Object[].class);

		if (ordersResponse != null) {
			return Arrays.asList(ordersResponse.getBody());
		}
		
		return null;
	}

	public Object getUserDetail(String userId) {
		String url = usersUrl + "/users/" + userId;
		ResponseEntity<Object> userResponse = restTemplate.getForEntity(url, Object.class);

		if (userResponse != null) {
			return userResponse.getBody();
		}
		
		return null;
	}

	public RestTemplate getRestTemplate() {
		return restTemplate;
	}

	public void setRestTemplate(RestTemplate restTemplate) {
		this.restTemplate = restTemplate;
	}
	
}
